"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.outputNginx=void 0;var _nodeFs=require("node:fs"),_enums=require("../enums");function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(t,e){var r,n=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)),n}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){_defineProperty(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!=_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}var outputNginx=exports.outputNginx=function(e,t){var e=_objectSpread(_objectSpread({},_enums.DEFAULT_NGINX_CONFIGURATION),e||{}),r=e.output,e=e.port,r=(r||"").replace(/^\/|\.\/+/g,""),r="/".concat(r,"/nginx.default.conf"),e="\n  server {\n    listen       ".concat(e||80,";\n    server_name  localhost;\n    access_log  /var/log/nginx/host.access.log  main;\n    error_log  /var/log/nginx/error.log  error;\n    ").concat(t||"","\n    location / {\n      root   /usr/share/nginx/html;\n      try_files $uri $uri/ @router;\n      index  index.html index.htm;\n    }\n\n    location @router {\n      rewrite ^.*$ /index.html last;\n    }\n\n    error_page   500 502 503 504  /50x.html;\n\n    location = /50x.html {\n      root   /usr/share/nginx/html;\n    }\n  }");try{(0,_nodeFs.writeFileSync)(r,e),console.log("âœ¨ env-configuration-plugin create nginx.default.conf down")}catch(e){console.error("ðŸ™… env-configuration-plugin failed to create nginx.default.conf")}};